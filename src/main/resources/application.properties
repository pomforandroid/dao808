#\u5207\u6362\u914D\u7F6E\u6587\u4EF6
spring.profiles.active=test

spring.application.name= dao808
eureka.client.serviceUrl.defaultZone=http://localhost:1001/eureka/
#jpa\u6570\u636E\u5E93 ,mysql
#spring.datasource.url=jdbc:mysql://localhost:3306/test
#spring.datasource.username=root
#spring.datasource.password=123321
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.properties.hibernate.hbm2ddl.auto=update

# jpa\u6570\u636E\u5E93 sqlserver
#spring.datasource.url=jdbc:sqlserver://localhost;databaseName=demodb
#spring.datasource.username=sa
#spring.datasource.password=44448888
#spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.hibernate.ddl-auto=none
#spring.http.encoding.charset=utf8

#jpa \u591A\u6570\u636E\u6E90
spring.datasource.primary.url=jdbc:mysql://10.10.1.131:13306/gpstest
spring.datasource.primary.username=root
spring.datasource.primary.password=123321
spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver

#spring.datasource.secondary.url=jdbc:mysql://localhost:3306/test2
#spring.datasource.secondary.username=root
#spring.datasource.secondary.password=123321
#spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.secondary.url=jdbc:sqlserver://14.215.113.96:56339;databaseName=Appdb
spring.datasource.secondary.username=APPUser
spring.datasource.secondary.password=ap123456
spring.datasource.secondary.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

#spring.jpa.properties.hibernate.hbm2ddl.auto=update ,\u56E0\u4E3A\u914D\u7F6E\u4E86\u53CC\u6570\u636E\u6E90\uFF0Cmysql\u548Csqlserver,\u6240\u4EE5\u8FD9\u4E9B\u5C5E\u6027\u8981\u5206\u5F00\u518Djava\u914D\u7F6E\u91CC\u9762\u58F0\u660E

#\u5F00\u542Fhibernate\u5BF9sql\u8BED\u53E5\u7684\u6253\u5370
spring.jpa.properties.hibernate.show_sql=true
#\u65E0\u4FEE\u6539\u547D\u540D\uFF0C\u89E3\u51B3\u4E86\u9A7C\u5CF0\u53D8\u91CF\u4F1A\u751F\u6210\u6570\u636E\u5E93\u4E0B\u5212\u7EBF\u5B57\u6BB5\u7684\u95EE\u9898
#\u5728java\u914D\u7F6E\u6570\u636E\u6E90\u90A3\u91CC\u4E24\u4E2A\u6570\u636E\u6E90\u90FD\u914D\u7F6E\u4E86\u8FD9\u4E2A\uFF0C\u8FD9\u4E2A\u53EF\u4EE5\u4E0D\u7528\u8BBE\u7F6E
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#\u4F7F\u7528Redis\u505A\u96C6\u4E2D\u5F0F\u7F13\u5B58,redis\u914D\u7F6E
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1


#\u65E5\u5FD7\u8F93\u51FA\u8BBE\u7F6E
spring.output.ansi.enabled = DETECT

#\u76D1\u63A7\u7AEF\u70B9
management.security.enabled=false

security.oauth2.resource.filter-order=3



#aop \uFF0C\u9700\u8981\u914D\u7F6Espring.aop.proxy-target-class=true\uFF0C\u4E0D\u7136\u9ED8\u8BA4\u4F7F\u7528\u7684\u662F\u6807\u51C6Java\u7684\u5B9E\u73B0\u3002
#spring.aop.proxy-target-class=true



# \u968F\u673A\u5B57\u7B26\u4E32
skankhunt.chiji.value=${random.value}
# \u968F\u673Aint
skankhunt.chiji.number=${random.int}
# \u968F\u673Along
skankhunt.chiji.bignumber=${random.long}
# 10\u4EE5\u5185\u7684\u968F\u673A\u6570
skankhunt.chiji.test1=${random.int(10)}
# 10-20\u7684\u968F\u673A\u6570
skankhunt.chiji.test2=${random.int[10,20]}


